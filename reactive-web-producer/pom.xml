<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>reactive-web-producer</artifactId>
	<packaging>jar</packaging>

	<name>reactive-web-producer</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>com.mynotes.poc</groupId>
		<artifactId>microservice-all</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-kubernetes-ribbon</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<activation>
				<property>
					<name>docker</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${io.fabric8.docker.version}</version>
						<extensions>true</extensions>
						<configuration>
							<verbose>true</verbose>
							<images>
								<image>
									<alias>${project.artifactId}</alias>
									<name>poc-${project.artifactId}</name>
									<build>
										<from>java:8-jre-alpine</from>
										<!--<tags> <tag>${project.version}</tag> </tags> -->
										<entryPoint>
											<exec>
												<args>java</args>
												<!--<args>-Djava.security.egd=file:/dev/./urandom</args> -->
												<args>-jar</args>
												<args>/maven/${project.artifactId}-${project.version}.jar</args>
											</exec>
										</entryPoint>
										<assembly>
											<descriptorRef>artifact</descriptorRef>
										</assembly>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>build</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>build</goal>
									<!--<goal>push</goal>-->
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>
</project>
